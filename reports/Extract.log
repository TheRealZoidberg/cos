Traceback (most recent call last):
  File "/usr/share/miniconda/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Set up figure:
fig = plt.figure(figsize=(20, 7))
gs = fig.add_gridspec(nrows=5, ncols=3) # Using gridspec to control panel sizes and locations

for i in range(3):
    ax0 = fig.add_subplot(gs[0:4,i])
    ax1 = fig.add_subplot(gs[4:5,i])
    new_wvln, new_flux = Table.read('./output/calcos_run1/le4b04010_x1dsum.fits')[i]['WAVELENGTH', 'FLUX']
    old_wvln, old_flux, seg = Table.read(old_x1dsum)[i]['WAVELENGTH', 'FLUX', 'SEGMENT']
    
    # Interpolate the new wvln onto the old wvln's sampling:
    new_flux_interp = interp1d(x=new_wvln, y=new_flux, fill_value="extrapolate")(old_wvln)

    # Print max difference to user:
    print(f"Stripe {seg} differs by up to: \
    {100 * max(new_flux - old_flux)/np.mean(abs(old_flux)):.3f}%")

    # Plotting - upper panel
    ax0.plot(new_wvln,new_flux, linewidth=.5, label='$New$ extracted spectrum')
    ax0.plot(old_wvln,old_flux, linewidth=.5, label='$Original$ extracted spectrum')
    # Plotting - lower panel
    ax1.plot(new_wvln,old_flux - new_flux_interp, linewidth=.5, label='Residual')
    # Some formatting:
    ax0.set_title(f"Segment {seg}", fontsize=20)
    ax0.set_xticks([])
    ax0.legend(loc='lower center')
    ax1.legend(loc='lower center')
    if i == 0: # Add axis labels to the plot
        ax0.set_ylabel("Flux\n[$erg\ \AA^{-1}\ cm^{-2}\ s^{-1}$]", fontsize=20)
    if i == 1:
        plt.xlabel("Wavelength", fontsize=20)
plt.suptitle("Fig 3.1\nComparing the old and new extracted spectra for each segment", fontsize=25)
plt.tight_layout()
plt.savefig(str(plotsdir / "comp_extracted.png"), dpi=200)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mFileNotFoundError[0m                         Traceback (most recent call last)
Input [0;32mIn [23][0m, in [0;36m<cell line: 5>[0;34m()[0m
[1;32m      6[0m ax0 [38;5;241m=[39m fig[38;5;241m.[39madd_subplot(gs[[38;5;241m0[39m:[38;5;241m4[39m,i])
[1;32m      7[0m ax1 [38;5;241m=[39m fig[38;5;241m.[39madd_subplot(gs[[38;5;241m4[39m:[38;5;241m5[39m,i])
[0;32m----> 8[0m new_wvln, new_flux [38;5;241m=[39m [43mTable[49m[38;5;241;43m.[39;49m[43mread[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43m./output/calcos_run1/le4b04010_x1dsum.fits[39;49m[38;5;124;43m'[39;49m[43m)[49m[i][[38;5;124m'[39m[38;5;124mWAVELENGTH[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mFLUX[39m[38;5;124m'[39m]
[1;32m      9[0m old_wvln, old_flux, seg [38;5;241m=[39m Table[38;5;241m.[39mread(old_x1dsum)[i][[38;5;124m'[39m[38;5;124mWAVELENGTH[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mFLUX[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mSEGMENT[39m[38;5;124m'[39m]
[1;32m     11[0m [38;5;66;03m# Interpolate the new wvln onto the old wvln's sampling:[39;00m

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/astropy/table/connect.py:62[0m, in [0;36mTableRead.__call__[0;34m(self, *args, **kwargs)[0m
[1;32m     59[0m units [38;5;241m=[39m kwargs[38;5;241m.[39mpop([38;5;124m'[39m[38;5;124munits[39m[38;5;124m'[39m, [38;5;28;01mNone[39;00m)
[1;32m     60[0m descriptions [38;5;241m=[39m kwargs[38;5;241m.[39mpop([38;5;124m'[39m[38;5;124mdescriptions[39m[38;5;124m'[39m, [38;5;28;01mNone[39;00m)
[0;32m---> 62[0m out [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mregistry[49m[38;5;241;43m.[39;49m[43mread[49m[43m([49m[38;5;28;43mcls[39;49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m     64[0m [38;5;66;03m# For some readers (e.g., ascii.ecsv), the returned `out` class is not[39;00m
[1;32m     65[0m [38;5;66;03m# guaranteed to be the same as the desired output `cls`.  If so,[39;00m
[1;32m     66[0m [38;5;66;03m# try coercing to desired class without copying (io.registry.read[39;00m
[1;32m     67[0m [38;5;66;03m# would normally do a copy).  The normal case here is swapping[39;00m
[1;32m     68[0m [38;5;66;03m# Table <=> QTable.[39;00m
[1;32m     69[0m [38;5;28;01mif[39;00m [38;5;28mcls[39m [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m out[38;5;241m.[39m[38;5;18m__class__[39m:

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/astropy/io/registry/core.py:197[0m, in [0;36mUnifiedInputRegistry.read[0;34m(self, cls, format, cache, *args, **kwargs)[0m
[1;32m    195[0m [38;5;28;01mtry[39;00m:
[1;32m    196[0m     ctx [38;5;241m=[39m get_readable_fileobj(args[[38;5;241m0[39m], encoding[38;5;241m=[39m[38;5;124m'[39m[38;5;124mbinary[39m[38;5;124m'[39m, cache[38;5;241m=[39mcache)
[0;32m--> 197[0m     fileobj [38;5;241m=[39m [43mctx[49m[38;5;241;43m.[39;49m[38;5;21;43m__enter__[39;49m[43m([49m[43m)[49m
[1;32m    198[0m [38;5;28;01mexcept[39;00m [38;5;167;01mOSError[39;00m:
[1;32m    199[0m     [38;5;28;01mraise[39;00m

File [0;32m/usr/share/miniconda/lib/python3.9/contextlib.py:119[0m, in [0;36m_GeneratorContextManager.__enter__[0;34m(self)[0m
[1;32m    117[0m [38;5;28;01mdel[39;00m [38;5;28mself[39m[38;5;241m.[39margs, [38;5;28mself[39m[38;5;241m.[39mkwds, [38;5;28mself[39m[38;5;241m.[39mfunc
[1;32m    118[0m [38;5;28;01mtry[39;00m:
[0;32m--> 119[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mnext[39;49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mgen[49m[43m)[49m
[1;32m    120[0m [38;5;28;01mexcept[39;00m [38;5;167;01mStopIteration[39;00m:
[1;32m    121[0m     [38;5;28;01mraise[39;00m [38;5;167;01mRuntimeError[39;00m([38;5;124m"[39m[38;5;124mgenerator didn[39m[38;5;124m'[39m[38;5;124mt yield[39m[38;5;124m"[39m) [38;5;28;01mfrom[39;00m [38;5;28mNone[39m

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/astropy/utils/data.py:271[0m, in [0;36mget_readable_fileobj[0;34m(name_or_obj, encoding, cache, show_progress, remote_timeout, sources, http_headers)[0m
[1;32m    266[0m [38;5;28;01mif[39;00m is_url:
[1;32m    267[0m     name_or_obj [38;5;241m=[39m download_file(
[1;32m    268[0m         name_or_obj, cache[38;5;241m=[39mcache, show_progress[38;5;241m=[39mshow_progress,
[1;32m    269[0m         timeout[38;5;241m=[39mremote_timeout, sources[38;5;241m=[39msources,
[1;32m    270[0m         http_headers[38;5;241m=[39mhttp_headers)
[0;32m--> 271[0m fileobj [38;5;241m=[39m [43mio[49m[38;5;241;43m.[39;49m[43mFileIO[49m[43m([49m[43mname_or_obj[49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mr[39;49m[38;5;124;43m'[39;49m[43m)[49m
[1;32m    272[0m [38;5;28;01mif[39;00m is_url [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m cache:
[1;32m    273[0m     delete_fds[38;5;241m.[39mappend(fileobj)

[0;31mFileNotFoundError[0m: [Errno 2] No such file or directory: './output/calcos_run1/le4b04010_x1dsum.fits'
FileNotFoundError: [Errno 2] No such file or directory: './output/calcos_run1/le4b04010_x1dsum.fits'

